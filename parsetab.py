
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ASSIGN COLON COMMA CONST_F CONST_I CONST_STRING DIVIDE ELIF ELSE EQUALS FLOAT FUNCTION GLOBAL GREATER GREATER_EQ ID IF INT LESS LESS_EQ L_KEY_BRACKET L_PARENS L_SQUARE_BRACKET MAIN MINUS NOT NOT_EQUAL OR PLUS PRINT READ RETURN R_KEY_BRACKET R_PARENS R_SQUARE_BRACKET SEMICOLON STRING TIMES VOID WHILEprogram : program_aux main\n               | mainprogram_aux : program_aux function\n                   | functionfunction : function_header function_body n_end_functionmain : FUNCTION MAIN n_start_main function_body n_end_functionfunction_header : FUNCTION ID n_add_function_name L_PARENS function_params R_PARENS COLON function_type\n                       | FUNCTION ID n_add_function_name L_PARENS R_PARENS COLON function_typefunction_body : L_KEY_BRACKET function_body_aux statements R_KEY_BRACKET\n                     | L_KEY_BRACKET statements R_KEY_BRACKETfunction_body_aux : var function_body_aux\n                         | varstatements : statement statements\n                           | statementfunction_params : type ID n_add_var array_index COMMA function_params\n                       | type ID n_add_var array_index\n                       | type ID n_add_var COMMA function_params\n                       | type ID n_add_varfunction_type : INT n_add_function_type\n                     | FLOAT n_add_function_type\n                     | STRING n_add_function_type\n                     | VOID n_add_function_typevar : type_aux ID n_add_var array_dim var_aux SEMICOLON\n           | type_aux ID n_add_var array_dim SEMICOLON\n           | type_aux ID n_add_var var_aux SEMICOLON\n           | type_aux ID n_add_var SEMICOLONtype_aux : GLOBAL type\n                | typevar_aux : COMMA ID n_add_var array_dim var_aux\n               | COMMA ID n_add_var array_dim\n               | COMMA ID n_add_var var_aux\n               | COMMA ID n_add_varstatement : statement_aux SEMICOLON\n                 | statement_aux_2statement_aux : assignment\n                     | function_call\n                     | return\n                     | printstatement_aux_2 : if\n                       | whiletype : INT n_record_last_type\n            | FLOAT n_record_last_type\n            | STRING n_record_last_typearray_index : L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET\n                   | L_SQUARE_BRACKET expression R_SQUARE_BRACKETarray_dim : L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKET L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKET\n                 | L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKETassignment : ID array_index ASSIGN n_make_assignment expression\n                  | ID array_index ASSIGN n_make_assignment read\n                  | ID ASSIGN n_make_assignment expression\n                  | ID ASSIGN n_make_assignment readfunction_call : ID params_passreturn : RETURN expressionif : IF L_PARENS expression R_PARENS block elif else\n          | IF L_PARENS expression R_PARENS block elif\n          | IF L_PARENS expression R_PARENS block else\n          | IF L_PARENS expression R_PARENS blockelif : ELIF L_PARENS expression R_PARENS block elif\n            | ELIF L_PARENS expression R_PARENS blockelse : ELSE blockwhile : WHILE L_PARENS expression R_PARENS blockprint : PRINT L_PARENS print_aux R_PARENS\n             | PRINT L_PARENS R_PARENSprint_aux : CONST_STRING COMMA print_aux\n                 | CONST_STRING\n                 | ID COMMA print_aux\n                 | IDexpression : exp n_eval_exp AND n_add_operator expression\n                  | exp n_eval_expread : READ IDparams_pass : L_PARENS expression params_pass_aux R_PARENS\n                   | L_PARENS expression R_PARENS\n                   | L_PARENS R_PARENSparams_pass_aux : COMMA expression params_pass_aux\n                       | COMMA expressionblock : L_KEY_BRACKET statements R_KEY_BRACKETexp : xp n_eval_xp OR n_add_operator exp\n           | xp n_eval_xpxp : x n_eval_x log_op n_add_operator x\n          | x n_eval_xx : term n_eval_term PLUS n_add_operator x\n         | term n_eval_term MINUS n_add_operator x\n         | term n_eval_termlog_op : NOT_EQUAL\n              | EQUALS\n              | GREATER\n              | GREATER_EQ\n              | LESS\n              | LESS_EQterm : factor n_eval_factor TIMES n_add_operator term\n            | factor n_eval_factor DIVIDE n_add_operator term\n            | factor n_eval_factorfactor : NOT factor_aux\n              | factor_auxfactor_aux : L_PARENS expression R_PARENS\n                  | PLUS const\n                  | MINUS const\n                  | constconst : ID n_add_operand\n             | CONST_I n_add_operand\n             | CONST_F n_add_operand\n             | CONST_STRING n_add_operand\n             | function_call\n             | array_accessarray_access : ID array_indexn_start_main : n_add_function_name : n_add_function_type : n_end_function : n_add_var : n_record_last_type : n_eval_exp : n_eval_xp : n_eval_x : n_eval_factor : n_eval_term : n_add_operand : n_add_operator : n_make_assignment : '
    
_lr_action_items = {'FUNCTION':([0,2,4,8,11,15,42,81,],[5,5,-4,-3,-109,-5,-10,-9,]),'$end':([1,3,7,39,42,77,81,],[0,-2,-1,-109,-10,-6,-9,]),'MAIN':([5,],[9,]),'ID':([5,12,16,18,19,20,23,25,30,31,32,33,34,35,43,47,49,50,51,52,53,54,55,61,62,64,66,74,75,76,80,83,84,113,115,116,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,151,152,158,161,162,163,164,165,166,167,170,171,172,180,192,193,203,204,205,206,213,214,],[10,21,21,-12,21,45,-34,-28,-39,-40,-111,-111,-111,68,-11,-119,68,68,-33,-27,-41,-42,-43,68,68,68,68,105,68,68,110,-119,68,-26,154,68,157,68,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,105,105,-24,-25,68,68,68,68,68,68,68,68,-57,21,-61,-23,-55,-56,-54,68,-60,-76,-59,-58,]),'L_KEY_BRACKET':([6,9,13,141,142,144,145,146,147,148,173,174,175,176,177,195,212,],[12,-106,12,171,171,-8,-108,-108,-108,-108,-7,-19,-20,-21,-22,171,171,]),'L_PARENS':([10,14,21,35,36,37,38,47,49,50,64,66,68,75,76,83,84,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,158,161,162,163,164,165,166,167,194,204,],[-107,40,50,66,74,75,76,-119,66,66,66,66,50,66,66,-119,66,66,66,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,66,66,66,66,66,66,66,66,204,66,]),'GLOBAL':([12,18,113,151,152,180,],[24,24,-26,-24,-25,-23,]),'INT':([12,18,24,40,109,113,143,151,152,179,180,197,],[32,32,32,32,145,-26,145,-24,-25,32,-23,32,]),'FLOAT':([12,18,24,40,109,113,143,151,152,179,180,197,],[33,33,33,33,146,-26,146,-24,-25,33,-23,33,]),'STRING':([12,18,24,40,109,113,143,151,152,179,180,197,],[34,34,34,34,147,-26,147,-24,-25,34,-23,34,]),'RETURN':([12,16,18,19,23,30,31,43,51,113,151,152,170,171,172,180,192,193,203,205,206,213,214,],[35,35,-12,35,-34,-39,-40,-11,-33,-26,-24,-25,-57,35,-61,-23,-55,-56,-54,-60,-76,-59,-58,]),'PRINT':([12,16,18,19,23,30,31,43,51,113,151,152,170,171,172,180,192,193,203,205,206,213,214,],[36,36,-12,36,-34,-39,-40,-11,-33,-26,-24,-25,-57,36,-61,-23,-55,-56,-54,-60,-76,-59,-58,]),'IF':([12,16,18,19,23,30,31,43,51,113,151,152,170,171,172,180,192,193,203,205,206,213,214,],[37,37,-12,37,-34,-39,-40,-11,-33,-26,-24,-25,-57,37,-61,-23,-55,-56,-54,-60,-76,-59,-58,]),'WHILE':([12,16,18,19,23,30,31,43,51,113,151,152,170,171,172,180,192,193,203,205,206,213,214,],[38,38,-12,38,-34,-39,-40,-11,-33,-26,-24,-25,-57,38,-61,-23,-55,-56,-54,-60,-76,-59,-58,]),'R_KEY_BRACKET':([17,19,23,30,31,41,44,51,170,172,192,193,196,203,205,206,213,214,],[42,-14,-34,-39,-40,81,-13,-33,-57,-61,-55,-56,206,-54,-60,-76,-59,-58,]),'ASSIGN':([21,46,120,202,],[47,83,-45,-44,]),'L_SQUARE_BRACKET':([21,45,68,82,110,120,149,154,181,182,],[49,-110,49,114,-110,158,49,-110,199,114,]),'SEMICOLON':([22,26,27,28,29,45,48,56,57,58,59,60,63,65,67,68,69,70,71,72,73,82,87,88,89,90,91,92,93,94,95,97,98,99,100,101,103,111,112,117,118,120,122,137,138,150,154,155,156,157,159,181,182,185,186,187,188,189,190,191,200,201,202,209,211,],[51,-35,-36,-37,-38,-110,-52,-53,-112,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,113,-73,-69,-78,-80,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-63,151,152,-50,-51,-45,-72,-95,-62,180,-110,-48,-49,-70,-71,-47,-32,-68,-77,-79,-81,-82,-90,-91,-30,-31,-44,-29,-46,]),'NOT':([35,47,49,50,66,75,76,83,84,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,158,161,162,163,164,165,166,167,204,],[64,-119,64,64,64,64,64,-119,64,64,64,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,64,64,64,64,64,64,64,64,64,]),'PLUS':([35,47,48,49,50,60,63,64,65,66,67,68,69,70,71,72,73,75,76,83,84,87,91,92,93,94,95,97,98,99,100,101,116,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,158,159,161,162,163,164,165,166,167,190,191,202,204,],[61,-119,-52,61,61,-116,-115,61,-94,61,-98,-117,-117,-117,-117,-103,-104,61,61,-119,61,-73,133,-96,-97,-92,-93,-99,-105,-100,-101,-102,61,-45,-72,61,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,-95,61,-71,61,61,61,61,61,61,61,-90,-91,-44,61,]),'MINUS':([35,47,48,49,50,60,63,64,65,66,67,68,69,70,71,72,73,75,76,83,84,87,91,92,93,94,95,97,98,99,100,101,116,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,158,159,161,162,163,164,165,166,167,190,191,202,204,],[62,-119,-52,62,62,-116,-115,62,-94,62,-98,-117,-117,-117,-117,-103,-104,62,62,-119,62,-73,134,-96,-97,-92,-93,-99,-105,-100,-101,-102,62,-45,-72,62,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,-95,62,-71,62,62,62,62,62,62,62,-90,-91,-44,62,]),'CONST_I':([35,47,49,50,61,62,64,66,75,76,83,84,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,158,161,162,163,164,165,166,167,199,204,],[69,-119,69,69,69,69,69,69,69,69,-119,69,153,69,69,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,69,69,69,69,69,69,69,69,208,69,]),'CONST_F':([35,47,49,50,61,62,64,66,75,76,83,84,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,158,161,162,163,164,165,166,167,204,],[70,-119,70,70,70,70,70,70,70,70,-119,70,70,70,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,70,70,70,70,70,70,70,70,70,]),'CONST_STRING':([35,47,49,50,61,62,64,66,74,75,76,83,84,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,158,161,162,163,164,165,166,167,204,],[71,-119,71,71,71,71,71,71,104,71,71,-119,71,71,71,-118,-118,-118,-84,-85,-86,-87,-88,-89,-118,-118,-118,-118,104,104,71,71,71,71,71,71,71,71,71,]),'R_PARENS':([40,48,50,57,58,59,60,63,65,67,68,69,70,71,72,73,74,78,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,110,120,121,122,137,149,159,160,168,169,178,184,185,186,187,188,189,190,191,198,202,207,210,],[79,-52,87,-112,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,103,108,122,-73,-69,-78,-80,-83,-96,-97,-92,-93,137,-99,-105,-100,-101,-102,138,-65,-67,141,142,-110,-45,159,-72,-95,-18,-71,-75,-64,-66,-16,-74,-68,-77,-79,-81,-82,-90,-91,-17,-44,-15,212,]),'COMMA':([45,48,57,58,59,60,63,65,67,68,69,70,71,72,73,82,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,104,105,110,111,120,122,137,149,154,159,160,178,181,182,185,186,187,188,189,190,191,200,202,211,],[-110,-52,-112,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,115,123,-73,-69,-78,-80,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,139,140,-110,115,-45,-72,-95,179,-110,-71,123,197,-47,115,-68,-77,-79,-81,-82,-90,-91,115,-44,-46,]),'READ':([47,83,84,116,],[-119,-119,119,119,]),'TIMES':([48,63,65,67,68,69,70,71,72,73,87,92,93,94,95,97,98,99,100,101,120,122,137,159,202,],[-52,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,-96,-97,135,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-44,]),'DIVIDE':([48,63,65,67,68,69,70,71,72,73,87,92,93,94,95,97,98,99,100,101,120,122,137,159,202,],[-52,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,-96,-97,136,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-44,]),'NOT_EQUAL':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,127,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'EQUALS':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,128,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'GREATER':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,129,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'GREATER_EQ':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,130,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'LESS':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,131,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'LESS_EQ':([48,59,60,63,65,67,68,69,70,71,72,73,87,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,188,189,190,191,202,],[-52,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,132,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-81,-82,-90,-91,-44,]),'OR':([48,58,59,60,63,65,67,68,69,70,71,72,73,87,89,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,187,188,189,190,191,202,],[-52,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,125,-80,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-79,-81,-82,-90,-91,-44,]),'AND':([48,57,58,59,60,63,65,67,68,69,70,71,72,73,87,88,89,90,91,92,93,94,95,97,98,99,100,101,120,122,137,159,186,187,188,189,190,191,202,],[-52,-112,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,-73,124,-78,-80,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,-71,-77,-79,-81,-82,-90,-91,-44,]),'R_SQUARE_BRACKET':([48,57,58,59,60,63,65,67,68,69,70,71,72,73,85,87,88,89,90,91,92,93,94,95,97,98,99,100,101,120,122,137,153,159,183,185,186,187,188,189,190,191,202,208,],[-52,-112,-113,-114,-116,-115,-94,-98,-117,-117,-117,-117,-103,-104,120,-73,-69,-78,-80,-83,-96,-97,-92,-93,-99,-105,-100,-101,-102,-45,-72,-95,181,-71,202,-68,-77,-79,-81,-82,-90,-91,-44,211,]),'COLON':([79,108,],[109,143,]),'VOID':([109,143,],[148,148,]),'ELIF':([170,206,213,],[194,-76,194,]),'ELSE':([170,192,206,213,214,],[195,195,-76,-59,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'main':([0,2,],[3,7,]),'function':([0,2,],[4,8,]),'function_header':([0,2,],[6,6,]),'function_body':([6,13,],[11,39,]),'n_start_main':([9,],[13,]),'n_add_function_name':([10,],[14,]),'n_end_function':([11,39,],[15,77,]),'function_body_aux':([12,18,],[16,43,]),'statements':([12,16,19,171,],[17,41,44,196,]),'var':([12,18,],[18,18,]),'statement':([12,16,19,171,],[19,19,19,19,]),'type_aux':([12,18,],[20,20,]),'statement_aux':([12,16,19,171,],[22,22,22,22,]),'statement_aux_2':([12,16,19,171,],[23,23,23,23,]),'type':([12,18,24,40,179,197,],[25,25,52,80,80,80,]),'assignment':([12,16,19,171,],[26,26,26,26,]),'function_call':([12,16,19,35,49,50,61,62,64,66,75,76,84,116,123,158,161,162,163,164,165,166,167,171,204,],[27,27,27,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,27,72,]),'return':([12,16,19,171,],[28,28,28,28,]),'print':([12,16,19,171,],[29,29,29,29,]),'if':([12,16,19,171,],[30,30,30,30,]),'while':([12,16,19,171,],[31,31,31,31,]),'array_index':([21,68,149,],[46,98,178,]),'params_pass':([21,68,],[48,48,]),'n_record_last_type':([32,33,34,],[53,54,55,]),'expression':([35,49,50,66,75,76,84,116,123,158,161,204,],[56,85,86,96,106,107,117,155,160,183,185,210,]),'exp':([35,49,50,66,75,76,84,116,123,158,161,162,204,],[57,57,57,57,57,57,57,57,57,57,57,186,57,]),'xp':([35,49,50,66,75,76,84,116,123,158,161,162,204,],[58,58,58,58,58,58,58,58,58,58,58,58,58,]),'x':([35,49,50,66,75,76,84,116,123,158,161,162,163,164,165,204,],[59,59,59,59,59,59,59,59,59,59,59,59,187,188,189,59,]),'term':([35,49,50,66,75,76,84,116,123,158,161,162,163,164,165,166,167,204,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,190,191,60,]),'factor':([35,49,50,66,75,76,84,116,123,158,161,162,163,164,165,166,167,204,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'factor_aux':([35,49,50,64,66,75,76,84,116,123,158,161,162,163,164,165,166,167,204,],[65,65,65,95,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'const':([35,49,50,61,62,64,66,75,76,84,116,123,158,161,162,163,164,165,166,167,204,],[67,67,67,92,93,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_access':([35,49,50,61,62,64,66,75,76,84,116,123,158,161,162,163,164,165,166,167,204,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'function_params':([40,179,197,],[78,198,207,]),'n_add_var':([45,110,154,],[82,149,182,]),'n_make_assignment':([47,83,],[84,116,]),'n_eval_exp':([57,],[88,]),'n_eval_xp':([58,],[89,]),'n_eval_x':([59,],[90,]),'n_eval_term':([60,],[91,]),'n_eval_factor':([63,],[94,]),'n_add_operand':([68,69,70,71,],[97,99,100,101,]),'print_aux':([74,139,140,],[102,168,169,]),'array_dim':([82,182,],[111,200,]),'var_aux':([82,111,182,200,],[112,150,201,209,]),'read':([84,116,],[118,156,]),'params_pass_aux':([86,160,],[121,184,]),'log_op':([90,],[126,]),'function_type':([109,143,],[144,173,]),'n_add_operator':([124,125,126,133,134,135,136,],[161,162,163,164,165,166,167,]),'block':([141,142,195,212,],[170,172,205,213,]),'n_add_function_type':([145,146,147,148,],[174,175,176,177,]),'elif':([170,213,],[192,214,]),'else':([170,192,],[193,203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_aux main','program',2,'p_program','parser.py',17),
  ('program -> main','program',1,'p_program','parser.py',18),
  ('program_aux -> program_aux function','program_aux',2,'p_program_aux','parser.py',22),
  ('program_aux -> function','program_aux',1,'p_program_aux','parser.py',23),
  ('function -> function_header function_body n_end_function','function',3,'p_function','parser.py',27),
  ('main -> FUNCTION MAIN n_start_main function_body n_end_function','main',5,'p_main','parser.py',31),
  ('function_header -> FUNCTION ID n_add_function_name L_PARENS function_params R_PARENS COLON function_type','function_header',8,'p_function_header','parser.py',35),
  ('function_header -> FUNCTION ID n_add_function_name L_PARENS R_PARENS COLON function_type','function_header',7,'p_function_header','parser.py',36),
  ('function_body -> L_KEY_BRACKET function_body_aux statements R_KEY_BRACKET','function_body',4,'p_function_body','parser.py',40),
  ('function_body -> L_KEY_BRACKET statements R_KEY_BRACKET','function_body',3,'p_function_body','parser.py',41),
  ('function_body_aux -> var function_body_aux','function_body_aux',2,'p_function_body_aux','parser.py',45),
  ('function_body_aux -> var','function_body_aux',1,'p_function_body_aux','parser.py',46),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',50),
  ('statements -> statement','statements',1,'p_statements','parser.py',51),
  ('function_params -> type ID n_add_var array_index COMMA function_params','function_params',6,'p_function_params','parser.py',55),
  ('function_params -> type ID n_add_var array_index','function_params',4,'p_function_params','parser.py',56),
  ('function_params -> type ID n_add_var COMMA function_params','function_params',5,'p_function_params','parser.py',57),
  ('function_params -> type ID n_add_var','function_params',3,'p_function_params','parser.py',58),
  ('function_type -> INT n_add_function_type','function_type',2,'p_function_type','parser.py',62),
  ('function_type -> FLOAT n_add_function_type','function_type',2,'p_function_type','parser.py',63),
  ('function_type -> STRING n_add_function_type','function_type',2,'p_function_type','parser.py',64),
  ('function_type -> VOID n_add_function_type','function_type',2,'p_function_type','parser.py',65),
  ('var -> type_aux ID n_add_var array_dim var_aux SEMICOLON','var',6,'p_var','parser.py',69),
  ('var -> type_aux ID n_add_var array_dim SEMICOLON','var',5,'p_var','parser.py',70),
  ('var -> type_aux ID n_add_var var_aux SEMICOLON','var',5,'p_var','parser.py',71),
  ('var -> type_aux ID n_add_var SEMICOLON','var',4,'p_var','parser.py',72),
  ('type_aux -> GLOBAL type','type_aux',2,'p_type_aux','parser.py',76),
  ('type_aux -> type','type_aux',1,'p_type_aux','parser.py',77),
  ('var_aux -> COMMA ID n_add_var array_dim var_aux','var_aux',5,'p_var_aux','parser.py',81),
  ('var_aux -> COMMA ID n_add_var array_dim','var_aux',4,'p_var_aux','parser.py',82),
  ('var_aux -> COMMA ID n_add_var var_aux','var_aux',4,'p_var_aux','parser.py',83),
  ('var_aux -> COMMA ID n_add_var','var_aux',3,'p_var_aux','parser.py',84),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','parser.py',88),
  ('statement -> statement_aux_2','statement',1,'p_statement','parser.py',89),
  ('statement_aux -> assignment','statement_aux',1,'p_statement_aux','parser.py',93),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','parser.py',94),
  ('statement_aux -> return','statement_aux',1,'p_statement_aux','parser.py',95),
  ('statement_aux -> print','statement_aux',1,'p_statement_aux','parser.py',96),
  ('statement_aux_2 -> if','statement_aux_2',1,'p_statement_aux_2','parser.py',100),
  ('statement_aux_2 -> while','statement_aux_2',1,'p_statement_aux_2','parser.py',101),
  ('type -> INT n_record_last_type','type',2,'p_type','parser.py',105),
  ('type -> FLOAT n_record_last_type','type',2,'p_type','parser.py',106),
  ('type -> STRING n_record_last_type','type',2,'p_type','parser.py',107),
  ('array_index -> L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET','array_index',6,'p_array_index','parser.py',111),
  ('array_index -> L_SQUARE_BRACKET expression R_SQUARE_BRACKET','array_index',3,'p_array_index','parser.py',112),
  ('array_dim -> L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKET L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKET','array_dim',6,'p_array_dim','parser.py',116),
  ('array_dim -> L_SQUARE_BRACKET CONST_I R_SQUARE_BRACKET','array_dim',3,'p_array_dim','parser.py',117),
  ('assignment -> ID array_index ASSIGN n_make_assignment expression','assignment',5,'p_assignment','parser.py',121),
  ('assignment -> ID array_index ASSIGN n_make_assignment read','assignment',5,'p_assignment','parser.py',122),
  ('assignment -> ID ASSIGN n_make_assignment expression','assignment',4,'p_assignment','parser.py',123),
  ('assignment -> ID ASSIGN n_make_assignment read','assignment',4,'p_assignment','parser.py',124),
  ('function_call -> ID params_pass','function_call',2,'p_function_call','parser.py',128),
  ('return -> RETURN expression','return',2,'p_return','parser.py',132),
  ('if -> IF L_PARENS expression R_PARENS block elif else','if',7,'p_if','parser.py',136),
  ('if -> IF L_PARENS expression R_PARENS block elif','if',6,'p_if','parser.py',137),
  ('if -> IF L_PARENS expression R_PARENS block else','if',6,'p_if','parser.py',138),
  ('if -> IF L_PARENS expression R_PARENS block','if',5,'p_if','parser.py',139),
  ('elif -> ELIF L_PARENS expression R_PARENS block elif','elif',6,'p_elif','parser.py',143),
  ('elif -> ELIF L_PARENS expression R_PARENS block','elif',5,'p_elif','parser.py',144),
  ('else -> ELSE block','else',2,'p_else','parser.py',148),
  ('while -> WHILE L_PARENS expression R_PARENS block','while',5,'p_while','parser.py',152),
  ('print -> PRINT L_PARENS print_aux R_PARENS','print',4,'p_print','parser.py',156),
  ('print -> PRINT L_PARENS R_PARENS','print',3,'p_print','parser.py',157),
  ('print_aux -> CONST_STRING COMMA print_aux','print_aux',3,'p_print_aux','parser.py',161),
  ('print_aux -> CONST_STRING','print_aux',1,'p_print_aux','parser.py',162),
  ('print_aux -> ID COMMA print_aux','print_aux',3,'p_print_aux','parser.py',163),
  ('print_aux -> ID','print_aux',1,'p_print_aux','parser.py',164),
  ('expression -> exp n_eval_exp AND n_add_operator expression','expression',5,'p_expression','parser.py',168),
  ('expression -> exp n_eval_exp','expression',2,'p_expression','parser.py',169),
  ('read -> READ ID','read',2,'p_read','parser.py',173),
  ('params_pass -> L_PARENS expression params_pass_aux R_PARENS','params_pass',4,'p_params_pass','parser.py',177),
  ('params_pass -> L_PARENS expression R_PARENS','params_pass',3,'p_params_pass','parser.py',178),
  ('params_pass -> L_PARENS R_PARENS','params_pass',2,'p_params_pass','parser.py',179),
  ('params_pass_aux -> COMMA expression params_pass_aux','params_pass_aux',3,'p_params_pass_aux','parser.py',183),
  ('params_pass_aux -> COMMA expression','params_pass_aux',2,'p_params_pass_aux','parser.py',184),
  ('block -> L_KEY_BRACKET statements R_KEY_BRACKET','block',3,'p_block','parser.py',188),
  ('exp -> xp n_eval_xp OR n_add_operator exp','exp',5,'p_exp','parser.py',192),
  ('exp -> xp n_eval_xp','exp',2,'p_exp','parser.py',193),
  ('xp -> x n_eval_x log_op n_add_operator x','xp',5,'p_xp','parser.py',197),
  ('xp -> x n_eval_x','xp',2,'p_xp','parser.py',198),
  ('x -> term n_eval_term PLUS n_add_operator x','x',5,'p_x','parser.py',202),
  ('x -> term n_eval_term MINUS n_add_operator x','x',5,'p_x','parser.py',203),
  ('x -> term n_eval_term','x',2,'p_x','parser.py',204),
  ('log_op -> NOT_EQUAL','log_op',1,'p_log_op','parser.py',208),
  ('log_op -> EQUALS','log_op',1,'p_log_op','parser.py',209),
  ('log_op -> GREATER','log_op',1,'p_log_op','parser.py',210),
  ('log_op -> GREATER_EQ','log_op',1,'p_log_op','parser.py',211),
  ('log_op -> LESS','log_op',1,'p_log_op','parser.py',212),
  ('log_op -> LESS_EQ','log_op',1,'p_log_op','parser.py',213),
  ('term -> factor n_eval_factor TIMES n_add_operator term','term',5,'p_term','parser.py',217),
  ('term -> factor n_eval_factor DIVIDE n_add_operator term','term',5,'p_term','parser.py',218),
  ('term -> factor n_eval_factor','term',2,'p_term','parser.py',219),
  ('factor -> NOT factor_aux','factor',2,'p_factor','parser.py',223),
  ('factor -> factor_aux','factor',1,'p_factor','parser.py',224),
  ('factor_aux -> L_PARENS expression R_PARENS','factor_aux',3,'p_factor_aux','parser.py',228),
  ('factor_aux -> PLUS const','factor_aux',2,'p_factor_aux','parser.py',229),
  ('factor_aux -> MINUS const','factor_aux',2,'p_factor_aux','parser.py',230),
  ('factor_aux -> const','factor_aux',1,'p_factor_aux','parser.py',231),
  ('const -> ID n_add_operand','const',2,'p_const','parser.py',235),
  ('const -> CONST_I n_add_operand','const',2,'p_const','parser.py',236),
  ('const -> CONST_F n_add_operand','const',2,'p_const','parser.py',237),
  ('const -> CONST_STRING n_add_operand','const',2,'p_const','parser.py',238),
  ('const -> function_call','const',1,'p_const','parser.py',239),
  ('const -> array_access','const',1,'p_const','parser.py',240),
  ('array_access -> ID array_index','array_access',2,'p_array_access','parser.py',244),
  ('n_start_main -> <empty>','n_start_main',0,'p_n_start_main','parser.py',250),
  ('n_add_function_name -> <empty>','n_add_function_name',0,'p_n_add_function_name','parser.py',255),
  ('n_add_function_type -> <empty>','n_add_function_type',0,'p_n_add_function_type','parser.py',260),
  ('n_end_function -> <empty>','n_end_function',0,'p_n_end_function','parser.py',266),
  ('n_add_var -> <empty>','n_add_var',0,'p_n_add_var','parser.py',271),
  ('n_record_last_type -> <empty>','n_record_last_type',0,'p_n_record_last_type','parser.py',277),
  ('n_eval_exp -> <empty>','n_eval_exp',0,'p_n_eval_exp','parser.py',283),
  ('n_eval_xp -> <empty>','n_eval_xp',0,'p_n_eval_xp','parser.py',288),
  ('n_eval_x -> <empty>','n_eval_x',0,'p_n_eval_x','parser.py',293),
  ('n_eval_factor -> <empty>','n_eval_factor',0,'p_n_eval_factor','parser.py',298),
  ('n_eval_term -> <empty>','n_eval_term',0,'p_n_eval_term','parser.py',303),
  ('n_add_operand -> <empty>','n_add_operand',0,'p_n_add_operand','parser.py',308),
  ('n_add_operator -> <empty>','n_add_operator',0,'p_n_add_operator','parser.py',314),
  ('n_make_assignment -> <empty>','n_make_assignment',0,'p_n_make_assignment','parser.py',319),
]
